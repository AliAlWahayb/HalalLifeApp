name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint-format:
    name: Lint, Format & PascalCase Enforcement
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 safety alembic

      - name: Check Formatting with Black
        run: black --check .

      - name: Lint with Flake8
        run: flake8 .

      - name: Enforce PascalCase Naming
        run: |
          python scripts/enforce_pascal.py

  test:
    name: Run Tests & Security Checks
    runs-on: ubuntu-latest
    needs: lint-format
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Database Migrations
        run: alembic upgrade head

      - name: Run Tests with Pytest
        run: pytest --maxfail=1 --disable-warnings

      - name: Check Dependencies for Security Issues
        run: safety check --full-report

      - name: Save Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: pytest-reports
          path: reports/

  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/halal-life-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/halal-life-backend:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Kubernetes CLI
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml
          kubectl rollout restart deployment halal-life-backend
